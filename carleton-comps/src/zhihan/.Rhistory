poly_one <- st_transform(st_union(st_as_sf(polygons)), crs=CRS("+proj=longlat +datum=NAD83 +no_defs"))
minn_blocks_one <- poly_one %>% as_Spatial()
proj4string(minn_blocks_one) #check projection
minn_one_bg_tidy <- broom::tidy(minn_blocks_one)
minn_blocks_one$id <- row.names(minn_blocks_one)
minn_map +
geom_polygon(data= minn_blocks_one,
aes(x = long, y = lat, group = group),
col = "blue", linewidth=1, fill=NA) +
geom_point(data=use_of_force_data, aes(x=X, y=Y), alpha=0.3, size=1) +
geom_polygon(data= ward9_tidy,
aes(x = long, y = lat, group = group),
col = "red", fill = NA, linewidth=1) +
labs(title = "Police Use of Force Incidents \n in Minneapolis") +
theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
minn_map +
geom_polygon(data= minn_blocks_one,
aes(x = long, y = lat, group = group),
col = "blue", linewidth=1, fill=NA) +
geom_point(data=crime_data, aes(x=X, y=Y), alpha=0.3, size=1) +
geom_polygon(data= ward9_tidy,
aes(x = long, y = lat, group = group),
col = "red", fill = NA, linewidth=1) +
labs(title = "Crimes in Minneapolis") +
theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
minn_map +
geom_polygon(data= minn_blocks_one,
aes(x = long, y = lat, group = group),
col = "blue", linewidth=1, fill=NA) +
geom_point(data=crime_data, aes(x=X, y=Y), alpha=0.3, size=1) +
# geom_polygon(data= ward9_tidy,
#               aes(x = long, y = lat, group = group),
#               col = "red", fill = NA, linewidth=1) +
labs(title = "Crimes in Minneapolis") +
theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
minn_map +
geom_polygon(data= minn_blocks_one,
aes(x = long, y = lat, group = group),
col = "blue", linewidth=1, fill=NA) +
geom_point(data=crime_data, aes(x=X, y=Y), alpha=0.3, size=1) +
# geom_polygon(data= ward9_tidy,
#               aes(x = long, y = lat, group = group),
#               col = "red", fill = NA, linewidth=1) +
labs(title = "Crimes in Minneapolis") +
theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
load("/Users/ayaklos/Documents/GitHub/carleton_comps_22_23/data/working/Census_Blocks_Data.Rdata")
load("/Users/ayaklos/Documents/GitHub/carleton_comps_22_23/data/working/ward_9_blockgroups/Ward9_Blocks.Rdata")
mn_wards <- st_read("/Users/ayaklos/Documents/GitHub/carleton_comps_22_23/data/original/City_Council_Wards/WARDS.shp")
mn_ward9 <- mn_wards[mn_wards$BDNUM==9,] %>% as_Spatial()
minn_map <- ggmap(get_map(c(left = -93.334, bottom = 44.888,
right = -93.19, top = 45.055), source = "stamen"))
ward9_map <- ggmap(get_map(c(left = -93.28, bottom = 44.933,
right = -93.227, top = 44.963), source = "stamen"))
proj4string(mn_ward9)
mn_ward9 <- spTransform(mn_ward9, CRS("+proj=longlat +datum=NAD83 +no_defs"))
proj4string(mn_ward9)
proj4string(minneapolis_blocks) #check projection
minn_bg_tidy <- broom::tidy(minneapolis_blocks)
minneapolis_blocks$id <- row.names(minneapolis_blocks)
minn_bg_tidy <- left_join(minn_bg_tidy, minneapolis_blocks@data)
proj4string(ward9_blocks) #check projection
ward9_bg_tidy <- broom::tidy(ward9_blocks)
ward9_blocks$id <- row.names(ward9_blocks)
ward9_bg_tidy <- left_join(ward9_bg_tidy, ward9_blocks@data)
proj4string(mn_ward9) #check projection
ward9_tidy <- broom::tidy(mn_ward9)
mn_ward9$id <- row.names(mn_ward9)
ward9_tidy <- left_join(ward9_tidy, mn_ward9@data)
use_of_force_data <- read.csv("/Users/ayaklos/Documents/GitHub/carleton_comps_22_23/data/original/Police_Use_of_Force.csv")
use_of_force_data <- use_of_force_data[use_of_force_data$X != 0,]
polygons <- as(minneapolis_blocks, "SpatialPolygons")
poly_one <- st_transform(st_union(st_as_sf(polygons)), crs=CRS("+proj=longlat +datum=NAD83 +no_defs"))
minn_blocks_one <- poly_one %>% as_Spatial()
proj4string(minn_blocks_one) #check projection
minn_one_bg_tidy <- broom::tidy(minn_blocks_one)
minn_blocks_one$id <- row.names(minn_blocks_one)
minn_map +
geom_polygon(data= minn_blocks_one,
aes(x = long, y = lat, group = group),
col = "blue", linewidth=1, fill=NA) +
geom_point(data=crime_data, aes(x=X, y=Y), alpha=0.3, size=1) +
geom_polygon(data= ward9_tidy,
aes(x = long, y = lat, group = group),
col = "red", fill = NA, linewidth=1) +
labs(title = "Crimes in Minneapolis") +
theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
load("/Users/ayaklos/Documents/GitHub/carleton_comps_22_23/data/working/Census_Blocks_Data.Rdata")
load("/Users/ayaklos/Documents/GitHub/carleton_comps_22_23/data/working/ward_9_blockgroups/Ward9_Blocks.Rdata")
mn_wards <- st_read("/Users/ayaklos/Documents/GitHub/carleton_comps_22_23/data/original/City_Council_Wards/WARDS.shp")
mn_ward9 <- mn_wards[mn_wards$BDNUM==9,] %>% as_Spatial()
minn_map <- ggmap(get_map(c(left = -93.334, bottom = 44.888,
right = -93.19, top = 45.055), source = "stamen"))
ward9_map <- ggmap(get_map(c(left = -93.28, bottom = 44.933,
right = -93.227, top = 44.963), source = "stamen"))
proj4string(mn_ward9)
mn_ward9 <- spTransform(mn_ward9, CRS("+proj=longlat +datum=NAD83 +no_defs"))
proj4string(mn_ward9)
proj4string(minneapolis_blocks) #check projection
minn_bg_tidy <- broom::tidy(minneapolis_blocks)
minneapolis_blocks$id <- row.names(minneapolis_blocks)
minn_bg_tidy <- left_join(minn_bg_tidy, minneapolis_blocks@data)
proj4string(ward9_blocks) #check projection
ward9_bg_tidy <- broom::tidy(ward9_blocks)
ward9_blocks$id <- row.names(ward9_blocks)
ward9_bg_tidy <- left_join(ward9_bg_tidy, ward9_blocks@data)
proj4string(mn_ward9) #check projection
ward9_tidy <- broom::tidy(mn_ward9)
mn_ward9$id <- row.names(mn_ward9)
ward9_tidy <- left_join(ward9_tidy, mn_ward9@data)
use_of_force_data <- read.csv("/Users/ayaklos/Documents/GitHub/carleton_comps_22_23/data/original/Police_Use_of_Force.csv")
use_of_force_data <- use_of_force_data[use_of_force_data$X != 0,]
crime_data <- read.csv("/Users/ayaklos/Documents/GitHub/carleton_comps_22_23/data/original/Crime_Data.csv")
crime_data <- crime_data[crime_data$X != 0,]
police_incident_data <- read.csv("/Users/ayaklos/Documents/GitHub/carleton_comps_22_23/data/working/Police_Incidents.csv")
police_incident_data <- police_incident_data[police_incident_data$X != 0,]
polygons <- as(minneapolis_blocks, "SpatialPolygons")
poly_one <- st_transform(st_union(st_as_sf(polygons)), crs=CRS("+proj=longlat +datum=NAD83 +no_defs"))
minn_blocks_one <- poly_one %>% as_Spatial()
proj4string(minn_blocks_one) #check projection
minn_one_bg_tidy <- broom::tidy(minn_blocks_one)
minn_blocks_one$id <- row.names(minn_blocks_one)
minn_map +
geom_polygon(data= minn_blocks_one,
aes(x = long, y = lat, group = group),
col = "blue", linewidth=1, fill=NA) +
geom_point(data=crime_data, aes(x=X, y=Y), alpha=0.3, size=1) +
geom_polygon(data= ward9_tidy,
aes(x = long, y = lat, group = group),
col = "red", fill = NA, linewidth=1) +
labs(title = "Crimes in Minneapolis") +
theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
minn_map +
geom_polygon(data= minn_blocks_one,
aes(x = long, y = lat, group = group),
col = "blue", linewidth=1, fill=NA) +
geom_point(data=police_incident_data, aes(x=Long, y=Lat), alpha=0.3, size=1) +
geom_polygon(data= ward9_tidy,
aes(x = long, y = lat, group = group),
col = "red", fill = NA, linewidth=1) +
labs(title = "Police Incidents in Minneapolis") +
theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(tidyverse)
library(spatstat)
library(sf)
library(sp)
library(raster)
library(maptools)
library(ggmap)
#load in the data
crime_data <- read.csv("/Users/ayaklos/Documents/GitHub/carleton_comps_22_23/data/original/Crime_Data.csv")
use_of_force_data <- read.csv("/Users/ayaklos/Documents/GitHub/carleton_comps_22_23/data/original/Police_Use_of_Force.csv")
police_incident_data <- read.csv("/Users/ayaklos/Documents/GitHub/carleton_comps_22_23/data/working/Police_Incidents.csv")
load("/Users/ayaklos/Documents/GitHub/carleton_comps_22_23/data/working/ward_9_blockgroups/Ward9_Blocks.Rdata")
obs_pts_and_covs <- read.csv("/Users/ayaklos/Documents/GitHub/carleton_comps_22_23/data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv")
#load map
ward9_map <- ggmap(get_map(c(left = -93.28, bottom = 44.933,
right = -93.227, top = 44.963), source = "stamen"))
#check for missing coordinates--there are none in each of the datasets
sum(is.na(crime_data$X))
sum(is.na(use_of_force_data$X))
sum(is.na(police_incident_data$Long))
#check that points look normal when plotted (there are some points with coordinates (0,0))
# ggplot(crime_data, aes(x=X, y=Y)) + geom_point()
# ggplot(use_of_force_data, aes(x=X, y=Y)) + geom_point()
# ggplot(police_incident_data, aes(x=Long, y=Lat)) + geom_point()
#get rid of (0,0) coordinates
crime_data <- crime_data[crime_data$X != 0,]
use_of_force_data <- use_of_force_data[use_of_force_data$X != 0,]
police_incident_data <- police_incident_data[police_incident_data$Long != 0,]
#check again that points look normal (points look good now)
# ggplot(crime_data, aes(x=X, y=Y)) + geom_point()
# ggplot(use_of_force_data, aes(x=X, y=Y)) + geom_point()
# ggplot(police_incident_data, aes(x=Long, y=Lat)) + geom_point()
police_incident_data$X2 <- police_incident_data$Long
police_incident_data$Y2 <- police_incident_data$Lat
# set.seed(3)
#project data to plot it over ward9 map
coordinates(crime_data) <- ~X+Y
proj4string(crime_data) <- CRS("+proj=longlat +datum=NAD83 +no_defs")
coordinates(use_of_force_data) <- ~X+Y
proj4string(use_of_force_data) <- CRS("+proj=longlat +datum=NAD83 +no_defs")
coordinates(police_incident_data) <- ~X2+Y2
proj4string(police_incident_data) <- CRS("+proj=longlat +datum=NAD83 +no_defs")
over_crime_blocks <- over(crime_data, ward9_blocks)
over_crime_blocks$Lat <- crime_data@data$Latitude
over_crime_blocks$Long <- crime_data@data$Longitude
over_crime_blocks.rm_na <- over_crime_blocks[!is.na(over_crime_blocks$GEOID),] #get rid of points outside of ward9
over_uof_blocks <- over(use_of_force_data, ward9_blocks)
over_uof_blocks$Lat <- use_of_force_data@data$CenterLatitude
over_uof_blocks$Long <- use_of_force_data@data$CenterLongitude
over_uof_blocks.rm_na <- over_uof_blocks[!is.na(over_uof_blocks$GEOID),] #get rid of points outside of ward9
over_pi_blocks <- over(police_incident_data, ward9_blocks)
over_pi_blocks$Lat <- police_incident_data@data$Lat
over_pi_blocks$Long <- police_incident_data@data$Long
over_pi_blocks.rm_na <- over_pi_blocks[!is.na(over_pi_blocks$GEOID),] #get rid of points outside of ward9
#plot ward 9 with block groups
ward9_blocks_tidy <- broom::tidy(ward9_blocks)
ward9_blocks$id <- row.names(ward9_blocks) #need to join data (if data is available)
ward9_blocks_tidy <- left_join(ward9_blocks_tidy, ward9_blocks@data)
ward9_map + geom_polygon(data= ward9_blocks_tidy,
aes(x = long, y = lat, group = group), fill = "red", col = "red", alpha=0.3) +
geom_point(data=over_crime_blocks.rm_na, aes(x=Long, y=Lat)) +
theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
title = element_text(size=12)) +
labs(title = "Crimes in Ward 9 (anonymized coordinates)")
ward9_map + geom_polygon(data= ward9_blocks_tidy,
aes(x = long, y = lat, group = group), fill = "red", col = "red", alpha=0.3) +
geom_point(data=over_uof_blocks.rm_na, aes(x=Long, y=Lat)) +
theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
title = element_text(size=12)) +
labs(title = "Police Use of Force Incidents in Ward 9 (anonymized coordinates)")
ward9_map + geom_polygon(data= ward9_blocks_tidy,
aes(x = long, y = lat, group = group), fill = "red", col = "red", alpha=0.3) +
geom_point(data=over_pi_blocks.rm_na, aes(x=Long, y=Lat)) +
theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
title = element_text(size=12)) +
labs(title = "Police Incidents in Ward 9 (anonymized coordinates)")
#need to slightly jitter points that are duplicated
#these are the duplicate points
dup_crime <- over_crime_blocks.rm_na[which(duplicated(over_crime_blocks.rm_na[,c("Long", "Lat")])),]
#remove the duplicated points for now, to combine with jittered points later
over_crime_blocks.rm_na <- over_crime_blocks.rm_na[-which(duplicated(over_crime_blocks.rm_na[,c("Long", "Lat")])),]
#generate jittering vector
set.seed(3)
jitter_lat <- runif(n = nrow(dup_crime), 0.000001, 0.000005) #data only goes to fifth decimal point
jitter_lon <- runif(n = nrow(dup_crime), 0.000001, 0.000005) #data only goes to fifth decimal point
plot(dup_crime$Long, dup_crime$Lat)
#jitter points by adding small value to eavh lat and long
dup_crime$Long <- dup_crime$Long + jitter_lon
dup_crime$Lat <- dup_crime$Lat + jitter_lat
plot(dup_crime$Long, dup_crime$Lat)
#combine after jittering
over_crime_blocks.rm_na <- rbind(over_crime_blocks.rm_na, dup_crime)
#need to slightly jitter points that are duplicated
#these are the duplicate points
dup_uof <- over_uof_blocks.rm_na[which(duplicated(over_uof_blocks.rm_na[,c("Long", "Lat")])),]
#remove the duplicated points for now, to combine with jittered points later
over_uof_blocks.rm_na <- over_uof_blocks.rm_na[-which(duplicated(over_uof_blocks.rm_na[,c("Long", "Lat")])),]
#generate jittering vector
set.seed(3)
jitter_lat2 <- runif(n = nrow(dup_uof), 0.000001, 0.000005) #data only goes to fifth decimal point
jitter_lon2 <- runif(n = nrow(dup_uof), 0.000001, 0.000005) #data only goes to fifth decimal point
plot(dup_uof$Long, dup_uof$Lat)
#jitter points by adding small value to eavh lat and long
dup_uof$Long <- dup_uof$Long + jitter_lon2
dup_uof$Lat <- dup_uof$Lat + jitter_lat2
plot(dup_uof$Long, dup_uof$Lat)
#combine after jittering
over_uof_blocks.rm_na <- rbind(over_uof_blocks.rm_na, dup_uof)
#need to slightly jitter points that are duplicated
#these are the duplicate points
dup_pi <- over_pi_blocks.rm_na[which(duplicated(over_pi_blocks.rm_na[,c("Long", "Lat")])),]
#remove the duplicated points for now, to combine with jittered points later
over_pi_blocks.rm_na <- over_pi_blocks.rm_na[-which(duplicated(over_pi_blocks.rm_na[,c("Long", "Lat")])),]
#generate jittering vector
set.seed(3)
jitter_lat3 <- runif(n = nrow(dup_pi), 0.000001, 0.000005) #data only goes to fifth decimal point
jitter_lon3 <- runif(n = nrow(dup_pi), 0.000001, 0.000005) #data only goes to fifth decimal point
plot(dup_pi$Long, dup_pi$Lat)
#jitter points by adding small value to eavh lat and long
dup_pi$Long <- dup_pi$Long + jitter_lon3
dup_pi$Lat <- dup_pi$Lat + jitter_lat3
plot(dup_pi$Long, dup_pi$Lat)
#combine after jittering
over_pi_blocks.rm_na <- rbind(over_pi_blocks.rm_na, dup_pi)
#check if there are duplicates among jittered points
any(duplicated(over_uof_blocks.rm_na[c("Long", "Lat")]))
any(duplicated(over_crime_blocks.rm_na[c("Long", "Lat")]))
any(duplicated(over_pi_blocks.rm_na[c("Long", "Lat")]))
#create window
ward9_blocks.poly <- as(ward9_blocks, "SpatialPolygons")
ward9_blocks.poly <- spTransform(ward9_blocks.poly, CRS("+init=epsg:6345")) #project polygons
#combine blocks
ward9_blocks.poly_one <- st_transform(st_union(st_as_sf(ward9_blocks.poly)), crs = CRS("+init=epsg:6345"))
#form an owin (window) from the one polygon
ward9_blocks_poly_win <- as.owin(as_Spatial(ward9_blocks.poly_one))
class(ward9_blocks_poly_win)
#confirm shape is ward 9
plot(ward9_blocks_poly_win)
#need to reproject data to follow new projection of window (lat/long doesn't work)
coordinates(over_crime_blocks.rm_na) <- ~Long+Lat
proj4string(over_crime_blocks.rm_na) <- CRS("+proj=longlat +datum=NAD83 +no_defs")
over_crime_blocks.rm_na <- spTransform(over_crime_blocks.rm_na, CRS("+init=epsg:6345"))
coordinates(over_uof_blocks.rm_na) <- ~Long+Lat
proj4string(over_uof_blocks.rm_na) <- CRS("+proj=longlat +datum=NAD83 +no_defs")
over_uof_blocks.rm_na <- spTransform(over_uof_blocks.rm_na, CRS("+init=epsg:6345"))
coordinates(over_pi_blocks.rm_na) <- ~Long+Lat
proj4string(over_pi_blocks.rm_na) <- CRS("+proj=longlat +datum=NAD83 +no_defs")
over_pi_blocks.rm_na <- spTransform(over_pi_blocks.rm_na, CRS("+init=epsg:6345"))
set.seed(3)
#create ppp objects
crime_ward9.ppp <- as.ppp(coordinates(over_crime_blocks.rm_na), W = ward9_blocks_poly_win)
uof_ward9.ppp <- as.ppp(coordinates(over_uof_blocks.rm_na), W = ward9_blocks_poly_win)
pi_ward9.ppp <- as.ppp(coordinates(over_pi_blocks.rm_na), W = ward9_blocks_poly_win)
#G function
g_env_uof_ward9 <- envelope(uof_ward9.ppp, fun = Gest, nrank = 2, nsim = 99)
plot(g_env_uof_ward9, main = "Police Use of Force Incidents in Ward 9 − G function", xlim = c(0,max(g_env_uof_ward9$r)))
g_env_crime_ward9 <- envelope(crime_ward9.ppp, fun = Gest, nrank = 2, nsim = 99)
plot(g_env_crime_ward9, main = "Crimes in Ward 9 − G function", xlim = c(0,max(g_env_crime_ward9$r)))
g_env_pi <- envelope(pi.ppp, fun = Gest, nrank = 2, nsim = 99)
g_env_pi <- envelope(pi_ward9.ppp, fun = Gest, nrank = 2, nsim = 99)
plot(g_env_pi, main = "Police Incidents Dataset in Ward 9 − G function", xlim = c(0,max(g_env_pi$r)))
#F function
f_env_uof_ward9 <- envelope(uof_ward9.ppp, fun = Fest, nrank = 2, nsim = 99)
plot(f_env_uof_ward9, main = "Police Use of Force incidents in Ward 9 − F function",
xlim = c(0,max(f_env_uof_ward9$r)))
f_env_crime_ward9 <- envelope(crime_ward9.ppp, fun = Fest, nrank = 2, nsim = 99)
plot(f_env_crime_ward9, main = "Crimes in Ward 9 − F function",
xlim = c(0,max(f_env_crime_ward9$r)))
f_env_pi <- envelope(pi_ward9.ppp, fun = Fest, nrank = 2, nsim = 99)
plot(f_env_pi, main = "Police Incidents in Ward 9− F function",
xlim = c(0,max(f_env_pi$r)))
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(tidyverse)
library(mcmcse)
library(coda)
#this shouldn't be stored in src folder
# nhpp_samp <- read.csv("/Users/ayaklos/Documents/GitHub/carleton_comps_22_23/src/parker/nhpp_samples.csv")
# load("/Users/ayaklos/Documents/GitHub/carleton_comps_22_23/data/working/ward_9_blockgroups/samples_bg_prop_pts_no3.Rdata")
#load samples
load("/Users/ayaklos/Downloads/lgcp_sus_uof_6cov_3million_samples_20000_int_pts.Rda")
#load in the data
crime_data <- read.csv("/Users/ayaklos/Documents/GitHub/carleton_comps_22_23/data/original/Crime_Data.csv")
use_of_force_data <- read.csv("/Users/ayaklos/Documents/GitHub/carleton_comps_22_23/data/original/Police_Use_of_Force.csv")
police_incident_data <- read.csv("/Users/ayaklos/Documents/GitHub/carleton_comps_22_23/data/working/Police_Incidents.csv")
load("/Users/ayaklos/Documents/GitHub/carleton_comps_22_23/data/working/ward_9_blockgroups/Ward9_Blocks.Rdata")
obs_pts_and_covs <- read.csv("/Users/ayaklos/Documents/GitHub/carleton_comps_22_23/data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv")
#load map
ward9_map <- ggmap(get_map(c(left = -93.28, bottom = 44.933,
right = -93.227, top = 44.963), source = "stamen"))
#check for missing coordinates--there are none in each of the datasets
sum(is.na(crime_data$X))
sum(is.na(use_of_force_data$X))
sum(is.na(police_incident_data$Long))
#check that points look normal when plotted (there are some points with coordinates (0,0))
# ggplot(crime_data, aes(x=X, y=Y)) + geom_point()
# ggplot(use_of_force_data, aes(x=X, y=Y)) + geom_point()
# ggplot(police_incident_data, aes(x=Long, y=Lat)) + geom_point()
#get rid of (0,0) coordinates
crime_data <- crime_data[crime_data$X != 0,]
use_of_force_data <- use_of_force_data[use_of_force_data$X != 0,]
police_incident_data <- police_incident_data[police_incident_data$Long != 0,]
#check again that points look normal (points look good now)
# ggplot(crime_data, aes(x=X, y=Y)) + geom_point()
# ggplot(use_of_force_data, aes(x=X, y=Y)) + geom_point()
# ggplot(police_incident_data, aes(x=Long, y=Lat)) + geom_point()
police_incident_data$X2 <- police_incident_data$Long
police_incident_data$Y2 <- police_incident_data$Lat
# set.seed(3)
#project data to plot it over ward9 map
coordinates(crime_data) <- ~X+Y
proj4string(crime_data) <- CRS("+proj=longlat +datum=NAD83 +no_defs")
coordinates(use_of_force_data) <- ~X+Y
proj4string(use_of_force_data) <- CRS("+proj=longlat +datum=NAD83 +no_defs")
coordinates(police_incident_data) <- ~X2+Y2
proj4string(police_incident_data) <- CRS("+proj=longlat +datum=NAD83 +no_defs")
over_crime_blocks <- over(crime_data, ward9_blocks)
over_crime_blocks$Lat <- crime_data@data$Latitude
over_crime_blocks$Long <- crime_data@data$Longitude
over_crime_blocks.rm_na <- over_crime_blocks[!is.na(over_crime_blocks$GEOID),] #get rid of points outside of ward9
over_uof_blocks <- over(use_of_force_data, ward9_blocks)
over_uof_blocks$Lat <- use_of_force_data@data$CenterLatitude
over_uof_blocks$Long <- use_of_force_data@data$CenterLongitude
over_uof_blocks.rm_na <- over_uof_blocks[!is.na(over_uof_blocks$GEOID),] #get rid of points outside of ward9
over_pi_blocks <- over(police_incident_data, ward9_blocks)
over_pi_blocks$Lat <- police_incident_data@data$Lat
over_pi_blocks$Long <- police_incident_data@data$Long
over_pi_blocks.rm_na <- over_pi_blocks[!is.na(over_pi_blocks$GEOID),] #get rid of points outside of ward9
#plot ward 9 with block groups
ward9_blocks_tidy <- broom::tidy(ward9_blocks)
ward9_blocks$id <- row.names(ward9_blocks) #need to join data (if data is available)
ward9_blocks_tidy <- left_join(ward9_blocks_tidy, ward9_blocks@data)
#plot points to make sure they are all located in ward9
ward9_map + geom_polygon(data= ward9_blocks_tidy,
aes(x = long, y = lat, group = group), fill = "red", col = "red", alpha=0.3) +
geom_point(data=over_crime_blocks.rm_na, aes(x=Long, y=Lat)) +
theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
title = element_text(size=12)) +
labs(title = "Crimes in Ward 9 (anonymized coordinates)")
ward9_map + geom_polygon(data= ward9_blocks_tidy,
aes(x = long, y = lat, group = group), fill = "red", col = "red", alpha=0.3) +
geom_point(data=over_uof_blocks.rm_na, aes(x=Long, y=Lat)) +
theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
title = element_text(size=12)) +
labs(title = "Police Use of Force Incidents in Ward 9 (anonymized coordinates)")
ward9_map + geom_polygon(data= ward9_blocks_tidy,
aes(x = long, y = lat, group = group), fill = "red", col = "red", alpha=0.3) +
geom_point(data=over_pi_blocks.rm_na, aes(x=Long, y=Lat)) +
theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
title = element_text(size=12)) +
labs(title = "Police Incidents in Ward 9 (anonymized coordinates)")
#load samples
load("/Users/ayaklos/Downloads//Users/ayaklos/Downloads/lgcp_uof_6cov_2million_ward9uof.Rda")
load("/Users/ayaklos/Downloads/Users/ayaklos/Downloads/lgcp_uof_6cov_2million_ward9uof.Rda")
#load samples
load("/Users/ayaklos/Downloads/Users/ayaklos/Downloads/lgcp_uof_6cov_2million_ward9uof.Rda")
load("/Users/ayaklos/Downloads/lgcp_uof_6cov_2million_ward9uof.Rda")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(tidyverse)
library(mcmcse)
library(coda)
#this shouldn't be stored in src folder
# nhpp_samp <- read.csv("/Users/ayaklos/Documents/GitHub/carleton_comps_22_23/src/parker/nhpp_samples.csv")
# load("/Users/ayaklos/Documents/GitHub/carleton_comps_22_23/data/working/ward_9_blockgroups/samples_bg_prop_pts_no3.Rdata")
#load samples
load("/Users/ayaklos/Downloads/lgcp_sus_uof_6cov_3million_samples_20000_int_pts.Rda")
#load samples
load("Users/ayaklos/Downloads/lgcp_uof_6cov_2million_ward9uof.Rda")
load("/Users/ayaklos/Downloads/lgcp_uof_6cov_2million_ward9uof.Rda")
ward9_samples <- samples
load("/Users/ayaklos/Downloads/lgcp_uof_6cov_2million_ward8uof.Rda")
ward8_samples <- samples
#remove burn in
ward9_rm_burnin <- ward9_samples[500001:nrow(ward9_samples),]
ward8_rm_burnin <- ward8_samples[500001:nrow(ward8_samples),]
#Ward 9 cases
ward9_lgcp_mcmc <- as.mcmc(ward9_rm_burnin)
ward9_hpd_int <- HPDinterval(ward9_lgcp_mcmc)
head(ward9_hpd_int)
ward9_hpd_int.df <- ward9_hpd_int %>% as.data.frame()
ward9_hpd_int.df$midpoint <- (ward9_hpd_int.df$lower + ward9_hpd_int.df$upper )/2
ward9_hpd_int.df$estimate <- rownames(ward9_hpd_int.df)
ward9_hpd_int.df$desc <- "Ward 9"
#Ward 8 cases
ward8_lgcp_mcmc <- as.mcmc(ward8_rm_burnin)
ward8_hpd_int <- HPDinterval(ward8_lgcp_mcmc)
head(ward8_hpd_int)
ward8_hpd_int.df <- ward8_hpd_int %>% as.data.frame()
ward8_hpd_int.df$midpoint <- (ward8_hpd_int.df$lower + ward8_hpd_int.df$upper )/2
ward8_hpd_int.df$estimate <- rownames(ward8_hpd_int.df)
ward8_hpd_int.df$desc <- "Ward 8"
wards_comb.df <- rbind(ward9_hpd_int.df,ward8_hpd_int.df)
wards_comb_coef.df <- wards_comb.df[c(1:7,81:87),]
wards_comb_coef.df <- wards_comb_coef.df %>% arrange(estimate)
wards_comb_coef.df$index <- c(1,1.5,
4,4.5,
7,7.5,
10,10.5,
13,13.5,
16,16.5,
19,19.5)
#plot for Wards 8 and 9 cases
ggplot(wards_comb_coef.df, aes(y=midpoint, x=index, color=estimate,shape=desc)) +
geom_pointrange(aes(ymin=lower, ymax=upper), size=0.8, linewidth=1.5) +
coord_flip() +
scale_color_manual(
values = c("black", "red", "orange",
"green4", "blue", "purple",
"hotpink"),
labels = new_names
) +
labs(x="", y="Estimate Values", color="Regression Coefficient \n Estimate",
shape="Case Type", title="Plot of 95% Credible Intervals for Regression Coefficient Estimates \n for Ward 8 & Ward 9 Cases") +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 12),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
title = element_text(size=12))
new_names <- c("beta0", "beta1 (Total Population)", "beta2 (Median Household Income)",
"beta3 (Perc. Female)", "beta4 (Herfindahl Index)", "beta5 (Perc. Unemployed)",
"beta6 (Perc. Foodstamp)")
#plot for Wards 8 and 9 cases
ggplot(wards_comb_coef.df, aes(y=midpoint, x=index, color=estimate,shape=desc)) +
geom_pointrange(aes(ymin=lower, ymax=upper), size=0.8, linewidth=1.5) +
coord_flip() +
scale_color_manual(
values = c("black", "red", "orange",
"green4", "blue", "purple",
"hotpink"),
labels = new_names
) +
labs(x="", y="Estimate Values", color="Regression Coefficient \n Estimate",
shape="Case Type", title="Plot of 95% Credible Intervals for Regression Coefficient Estimates \n for Ward 8 & Ward 9 Cases") +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
axis.title.x = element_text(size = 14),
axis.text.x = element_text(size = 12),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10),
title = element_text(size=12))
