gp_means <- colMeans(samples_no_burnin[,8:(ncol(samples)-2)] * samples_no_burnin[,ncol(samples)])
# here are everything that can be plotted
log_intensities <- as.matrix(covs_int) %*% as.matrix(beta_means) + integration_pts_vs_knots_cov %*% solve(knots_cov) %*% gp_means
log_intensities_no_gp <- as.matrix(covs_int) %*% as.matrix(beta_means)
gp <- integration_pts_vs_knots_cov %*% solve(knots_cov) %*% gp_means
log_intensities_exp <- exp(log_intensities)
ggmap(ward9_map) +
geom_point(data=int_pts, aes(x = x, y = y, color = log_intensities), size=2.6, shape=15) +
scale_color_viridis(name='Log intensity', limits=c(5, 17.5)) +
geom_polygon(data=ward9_blocks, aes(x = long, y = lat, group = group), fill=NA, color="black") +
coord_fixed() +
#geom_point(data=obs_pts, aes(x=X, y=Y), alpha=1, shape=1) +
#xlab("Longitude") +
#ylab("Latitude") +
#ggtitle("Log intensity surface of all use-of-force incidents (over Ward 9 Minneapolis)") +
theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(PrimaryOffense != "OBSTRU")
nrow(obs_data)
obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(PrimaryOffense == "OBSTRU")
nrow(obs_data)
obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(PrimaryOffense != "OBSTRU")
nrow(obs_data)
load("~/Downloads/lgcp_samples/lgcp_sus_uof_6cov_2million_samples.Rda")
library(nimble)
library(ggplot2)
library(fields)  # for rdist
library(glue)
library(dplyr)
library(sf)
library(sp)
library(spatstat)
library(reshape2)
library(raster)  # for the count plot in the very end
library(coda)
library(invgamma)
library(ggmap)
obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(PrimaryOffense != "OBSTRU")
nrow(obs_data)
load("~/Downloads/lgcp_samples/lgcp_sus_uof_6cov_2million_samples.Rda")
# make plotting faster
every <- 1000
samples_for_plotting <- samples[seq(1, nrow(samples), every), ]
library(zoo)
n_samples <- nrow(samples_for_plotting)
ggplot() +
geom_line(aes(
x=1:n_samples * every,
y=samples_for_plotting[, ncol(samples_for_plotting) - 1]
), color="black") +
ylab("Log-likelihood on a log scale") +
xlab("Iteration")
ggplot() +
geom_abline(intercept=0, slope=0) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 1], color="beta0")) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 2], color="beta1 (Total Population)")) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 3], color="beta2 (Median Household Income)")) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 4], color="beta3 (Perc. Female)")) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 5], color="beta4 (Herfendahl Index)")) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 6], color="beta5 (Perc. Unemployed)")) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 7], color="beta6 (Perc. Foodstamp)")) +
scale_color_manual(
name = "Regression\nCoefficients",
values = c(
"beta0" = "black",
"beta1 (Total Population)" = "red",
"beta2 (Median Household Income)" = "orange",
"beta3 (Perc. Female)" = "green",
"beta4 (Herfendahl Index)" = "blue",
"beta5 (Perc. Unemployed)" = "purple",
"beta6 (Perc. Foodstamp)" = "pink"
)
) +
xlab("Iteration") +
ylab("Value")
melted_samples <- melt(cbind(1:n_samples, samples_for_plotting[, 8:9]), id.vars="1:n_samples")
colnames(melted_samples)[1] <- "index"
ggplot() +
geom_line(data=melted_samples, aes(x=index * every, y=value, color=variable)) +
xlab("Iteration") +
ylab("GP values (on a 2 knots)") +
theme(legend.position="none")
ggplot() +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, ncol(samples)])) +
geom_abline(intercept=1, slope=0, linetype="dashed", color="black") +
xlab("Iteration") +
ylab("Sigma")
samples_no_burnin <- samples[1000000:2000000, ]
colMeans(samples_no_burnin[1:7])
effectiveSize(samples_no_burnin[1:7])
effectiveSize(samples_no_burnin[ncol(samples_no_burnin)])
# mcmc_intervals(samples_no_burnin[2:7], prob_outer=0.95, prob=0.5, outer_size=5, inner_size=5, point_size=2) +
#   scale_y_discrete(
#     labels = c(
#       "beta1" = "beta1 (normalized total population)",
#       "beta2" = "beta2 (normalized median household income)",
#       "beta3" = "beta3 (percent female)",
#       "beta4" = "beta4 (Herfendahl index)",
#       "beta5" = "beta5 (percent unemployed)",
#       "beta6" = "beta6 (percent foodstamp)"
#     )
#   )
ward9_map <- get_map(c(left = -93.28, bottom = 44.93,
right = -93.225, top = 44.965), source = "stamen")
# matrix(c(1, 1, 1, 1, 1, 1, 1, 1, 1), nrow=3) * c(1, 2, 3)
int_data <- read.csv("../../data/working/ward_9_blockgroups/over_simpoints_cov_10000int_points.csv")
int_pts <- int_data[, c("x", "y")]
int_cov <- int_data[, c("total_pop", "med_hh_income", "perc_female", "herfendahl", "perc_unemployed", "perc_foodstamp")]
# int_cov <- int_data[, c("total_pop", "med_hh_income")]
int_cov$total_pop = int_cov$total_pop / 2193
int_cov$med_hh_income = int_cov$med_hh_income / 110208
knots <- read.csv("../../data/working/ward_9_blockgroups/71_knots.csv")
expcov <- nimbleFunction(run = function(dists = double(2), phi = double(0), sigma = double(0)) {
returnType(double(2))
sigma2 <- sigma*sigma
result <- sigma2*exp(-dists/phi)
return(result)
})
# distance matrices
knots_dists <- rdist(knots, knots)
integration_pts_vs_knots_dists <- rdist(int_pts, knots)
# fix phi
dist_95 <- as.numeric(quantile(knots_dists, probs = c(0.95)))
dist_05 <- as.numeric(quantile(knots_dists, probs = c(0.05)))
#deciding range
upper_unif <- -dist_95/log(0.05)
lower_unif <- -dist_05/log(0.95)
#deciding fixed value for phi
fix_phi <- (upper_unif+lower_unif)/2
fix_phi
knots_cov = expcov(knots_dists, phi=fix_phi, sigma=1)
integration_pts_vs_knots_cov = expcov(integration_pts_vs_knots_dists, phi=fix_phi, sigma=1)
load("../../data/working/ward_9_blockgroups/Ward9_Blocks.Rdata")
covs_int <- int_cov
covs_int <- cbind(rep(1, nrow(covs_int)), covs_int)
beta_means <- colMeans(samples_no_burnin[,1:7])
gp_means <- colMeans(samples_no_burnin[,8:(ncol(samples)-2)] * samples_no_burnin[,ncol(samples)])
# here are everything that can be plotted
log_intensities <- as.matrix(covs_int) %*% as.matrix(beta_means) + integration_pts_vs_knots_cov %*% solve(knots_cov) %*% gp_means
log_intensities_no_gp <- as.matrix(covs_int) %*% as.matrix(beta_means)
gp <- integration_pts_vs_knots_cov %*% solve(knots_cov) %*% gp_means
log_intensities_exp <- exp(log_intensities)
ggmap(ward9_map) +
geom_point(data=int_pts, aes(x = x, y = y, color = log_intensities), size=2.6, shape=15) +
scale_color_viridis(name='Log intensity', limits=c(5, 17.5)) +
geom_polygon(data=ward9_blocks, aes(x = long, y = lat, group = group), fill=NA, color="black") +
coord_fixed() +
#geom_point(data=obs_pts, aes(x=X, y=Y), alpha=1, shape=1) +
#xlab("Longitude") +
#ylab("Latitude") +
#ggtitle("Log intensity surface of all use-of-force incidents (over Ward 9 Minneapolis)") +
theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(Problem != "Suspicious Person ")
nrow(obs_data)
obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(Problem != "Suspicious Person ")
nrow(obs_data)
obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(Problem == "Suspicious Person ")
nrow(obs_data)
plot(obs_data[, c("X", "Y")])
load("~/Downloads/lgcp_samples/lgcp_nonsus_uof_6cov_2million_samples.Rda")
every <- 1000
samples_for_plotting <- samples[seq(1, nrow(samples), every), ]
library(zoo)
n_samples <- nrow(samples_for_plotting)
ggplot() +
geom_line(aes(
x=1:n_samples * every,
y=samples_for_plotting[, ncol(samples_for_plotting) - 1]
), color="black") +
ylab("Log-likelihood on a log scale") +
xlab("Iteration")
ggplot() +
geom_abline(intercept=0, slope=0) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 1], color="beta0")) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 2], color="beta1 (Total Population)")) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 3], color="beta2 (Median Household Income)")) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 4], color="beta3 (Perc. Female)")) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 5], color="beta4 (Herfendahl Index)")) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 6], color="beta5 (Perc. Unemployed)")) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 7], color="beta6 (Perc. Foodstamp)")) +
scale_color_manual(
name = "Regression\nCoefficients",
values = c(
"beta0" = "black",
"beta1 (Total Population)" = "red",
"beta2 (Median Household Income)" = "orange",
"beta3 (Perc. Female)" = "green",
"beta4 (Herfendahl Index)" = "blue",
"beta5 (Perc. Unemployed)" = "purple",
"beta6 (Perc. Foodstamp)" = "pink"
)
) +
xlab("Iteration") +
ylab("Value")
melted_samples <- melt(cbind(1:n_samples, samples_for_plotting[, 8:9]), id.vars="1:n_samples")
colnames(melted_samples)[1] <- "index"
ggplot() +
geom_line(data=melted_samples, aes(x=index * every, y=value, color=variable)) +
xlab("Iteration") +
ylab("GP values (on a 2 knots)") +
theme(legend.position="none")
ggplot() +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, ncol(samples)])) +
geom_abline(intercept=1, slope=0, linetype="dashed", color="black") +
xlab("Iteration") +
ylab("Sigma")
obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(Problem == "Suspicious Person ")
nrow(obs_data)
load("~/Downloads/lgcp_samples/lgcp_sus_uof_6cov_2million_samples.Rda")
# make plotting faster
every <- 1000
samples_for_plotting <- samples[seq(1, nrow(samples), every), ]
library(zoo)
n_samples <- nrow(samples_for_plotting)
ggplot() +
geom_line(aes(
x=1:n_samples * every,
y=samples_for_plotting[, ncol(samples_for_plotting) - 1]
), color="black") +
ylab("Log-likelihood on a log scale") +
xlab("Iteration")
ggplot() +
geom_abline(intercept=0, slope=0) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 1], color="beta0")) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 2], color="beta1 (Total Population)")) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 3], color="beta2 (Median Household Income)")) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 4], color="beta3 (Perc. Female)")) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 5], color="beta4 (Herfendahl Index)")) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 6], color="beta5 (Perc. Unemployed)")) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 7], color="beta6 (Perc. Foodstamp)")) +
scale_color_manual(
name = "Regression\nCoefficients",
values = c(
"beta0" = "black",
"beta1 (Total Population)" = "red",
"beta2 (Median Household Income)" = "orange",
"beta3 (Perc. Female)" = "green",
"beta4 (Herfendahl Index)" = "blue",
"beta5 (Perc. Unemployed)" = "purple",
"beta6 (Perc. Foodstamp)" = "pink"
)
) +
xlab("Iteration") +
ylab("Value")
melted_samples <- melt(cbind(1:n_samples, samples_for_plotting[, 8:9]), id.vars="1:n_samples")
colnames(melted_samples)[1] <- "index"
ggplot() +
geom_line(data=melted_samples, aes(x=index * every, y=value, color=variable)) +
xlab("Iteration") +
ylab("GP values (on a 2 knots)") +
theme(legend.position="none")
ggplot() +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, ncol(samples)])) +
geom_abline(intercept=1, slope=0, linetype="dashed", color="black") +
xlab("Iteration") +
ylab("Sigma")
library(nimble)
library(ggplot2)
library(fields)  # for rdist
library(glue)
library(dplyr)
library(sf)
library(sp)
library(spatstat)
library(reshape2)
library(raster)  # for the count plot in the very end
library(coda)
library(invgamma)
library(ggmap)
obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(Problem == "Suspicious Person ")
nrow(obs_data)
load("~/Downloads/lgcp_samples/lgcp_sus_uof_6cov_2million_samples.Rda")
# make plotting faster
every <- 1000
samples_for_plotting <- samples[seq(1, nrow(samples), every), ]
library(zoo)
n_samples <- nrow(samples_for_plotting)
ggplot() +
geom_line(aes(
x=1:n_samples * every,
y=samples_for_plotting[, ncol(samples_for_plotting) - 1]
), color="black") +
ylab("Log-likelihood on a log scale") +
xlab("Iteration")
ggplot() +
geom_abline(intercept=0, slope=0) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 1], color="beta0")) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 2], color="beta1 (Total Population)")) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 3], color="beta2 (Median Household Income)")) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 4], color="beta3 (Perc. Female)")) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 5], color="beta4 (Herfendahl Index)")) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 6], color="beta5 (Perc. Unemployed)")) +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, 7], color="beta6 (Perc. Foodstamp)")) +
scale_color_manual(
name = "Regression\nCoefficients",
values = c(
"beta0" = "black",
"beta1 (Total Population)" = "red",
"beta2 (Median Household Income)" = "orange",
"beta3 (Perc. Female)" = "green",
"beta4 (Herfendahl Index)" = "blue",
"beta5 (Perc. Unemployed)" = "purple",
"beta6 (Perc. Foodstamp)" = "pink"
)
) +
xlab("Iteration") +
ylab("Value")
melted_samples <- melt(cbind(1:n_samples, samples_for_plotting[, 8:9]), id.vars="1:n_samples")
colnames(melted_samples)[1] <- "index"
ggplot() +
geom_line(data=melted_samples, aes(x=index * every, y=value, color=variable)) +
xlab("Iteration") +
ylab("GP values (on a 2 knots)") +
theme(legend.position="none")
ggplot() +
geom_line(aes(x=1:n_samples * every, y=samples_for_plotting[, ncol(samples)])) +
geom_abline(intercept=1, slope=0, linetype="dashed", color="black") +
xlab("Iteration") +
ylab("Sigma")
samples_no_burnin <- samples[1000000:2000000, ]
colMeans(samples_no_burnin[1:7])
effectiveSize(samples_no_burnin[1:7])
effectiveSize(samples_no_burnin[ncol(samples_no_burnin)])
# mcmc_intervals(samples_no_burnin[2:7], prob_outer=0.95, prob=0.5, outer_size=5, inner_size=5, point_size=2) +
#   scale_y_discrete(
#     labels = c(
#       "beta1" = "beta1 (normalized total population)",
#       "beta2" = "beta2 (normalized median household income)",
#       "beta3" = "beta3 (percent female)",
#       "beta4" = "beta4 (Herfendahl index)",
#       "beta5" = "beta5 (percent unemployed)",
#       "beta6" = "beta6 (percent foodstamp)"
#     )
#   )
ward9_map <- get_map(c(left = -93.28, bottom = 44.93,
right = -93.225, top = 44.965), source = "stamen")
# matrix(c(1, 1, 1, 1, 1, 1, 1, 1, 1), nrow=3) * c(1, 2, 3)
int_data <- read.csv("../../data/working/ward_9_blockgroups/over_simpoints_cov_10000int_points.csv")
int_pts <- int_data[, c("x", "y")]
int_cov <- int_data[, c("total_pop", "med_hh_income", "perc_female", "herfendahl", "perc_unemployed", "perc_foodstamp")]
# int_cov <- int_data[, c("total_pop", "med_hh_income")]
int_cov$total_pop = int_cov$total_pop / 2193
int_cov$med_hh_income = int_cov$med_hh_income / 110208
knots <- read.csv("../../data/working/ward_9_blockgroups/71_knots.csv")
expcov <- nimbleFunction(run = function(dists = double(2), phi = double(0), sigma = double(0)) {
returnType(double(2))
sigma2 <- sigma*sigma
result <- sigma2*exp(-dists/phi)
return(result)
})
# distance matrices
knots_dists <- rdist(knots, knots)
integration_pts_vs_knots_dists <- rdist(int_pts, knots)
# fix phi
dist_95 <- as.numeric(quantile(knots_dists, probs = c(0.95)))
dist_05 <- as.numeric(quantile(knots_dists, probs = c(0.05)))
#deciding range
upper_unif <- -dist_95/log(0.05)
lower_unif <- -dist_05/log(0.95)
#deciding fixed value for phi
fix_phi <- (upper_unif+lower_unif)/2
fix_phi
knots_cov = expcov(knots_dists, phi=fix_phi, sigma=1)
integration_pts_vs_knots_cov = expcov(integration_pts_vs_knots_dists, phi=fix_phi, sigma=1)
load("../../data/working/ward_9_blockgroups/Ward9_Blocks.Rdata")
covs_int <- int_cov
covs_int <- cbind(rep(1, nrow(covs_int)), covs_int)
beta_means <- colMeans(samples_no_burnin[,1:7])
gp_means <- colMeans(samples_no_burnin[,8:(ncol(samples)-2)] * samples_no_burnin[,ncol(samples)])
# here are everything that can be plotted
log_intensities <- as.matrix(covs_int) %*% as.matrix(beta_means) + integration_pts_vs_knots_cov %*% solve(knots_cov) %*% gp_means
log_intensities_no_gp <- as.matrix(covs_int) %*% as.matrix(beta_means)
gp <- integration_pts_vs_knots_cov %*% solve(knots_cov) %*% gp_means
log_intensities_exp <- exp(log_intensities)
ggmap(ward9_map) +
geom_point(data=int_pts, aes(x = x, y = y, color = log_intensities), size=2.6, shape=15) +
scale_color_viridis(name='Log intensity', limits=c(5, 17.5)) +
geom_polygon(data=ward9_blocks, aes(x = long, y = lat, group = group), fill=NA, color="black") +
coord_fixed() +
#geom_point(data=obs_pts, aes(x=X, y=Y), alpha=1, shape=1) +
#xlab("Longitude") +
#ylab("Latitude") +
#ggtitle("Log intensity surface of all use-of-force incidents (over Ward 9 Minneapolis)") +
theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
covs_int <- int_cov
covs_int <- cbind(rep(1, nrow(covs_int)), covs_int)
beta_means <- colMeans(samples_no_burnin[,1:7])
gp_means <- colMeans(samples_no_burnin[,8:(ncol(samples)-2)] * samples_no_burnin[,ncol(samples)])
# here are everything that can be plotted
log_intensities <- as.matrix(covs_int) %*% as.matrix(beta_means) + integration_pts_vs_knots_cov %*% solve(knots_cov) %*% gp_means
log_intensities_no_gp <- as.matrix(covs_int) %*% as.matrix(beta_means)
gp <- integration_pts_vs_knots_cov %*% solve(knots_cov) %*% gp_means
log_intensities_exp <- exp(log_intensities)
ggmap(ward9_map) +
geom_point(data=int_pts, aes(x = x, y = y, color = log_intensities), size=2.6, shape=15) +
scale_color_viridis(name='Log intensity') +
geom_polygon(data=ward9_blocks, aes(x = long, y = lat, group = group), fill=NA, color="black") +
coord_fixed() +
#geom_point(data=obs_pts, aes(x=X, y=Y), alpha=1, shape=1) +
#xlab("Longitude") +
#ylab("Latitude") +
#ggtitle("Log intensity surface of all use-of-force incidents (over Ward 9 Minneapolis)") +
theme(axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank())
# obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv")
obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(Problem == "Suspicious Perso n")
# obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(Problem != "Suspicious Person")
# obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(PrimaryOffense == "OBSTRU")
# obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(PrimaryOffense != "OBSTRU")
# obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(Is911Call == "Yes")
# obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(Is911Call == "No")
obs_pts <- obs_data[, c("X", "Y")]
set.seed(3)
jitter_lat <- runif(n = nrow(obs_pts), 0.0001, 0.0005) #only goes to fifth decimal point
jitter_lon <- runif(n = nrow(obs_pts), 0.0001, 0.0005) #only goes to fifth decimal point
obs_pts$Y <- obs_pts$Y + jitter_lat
obs_pts$X <- obs_pts$X + jitter_lon
obs_cov <- obs_data[, c("total_pop", "med_hh_income", "perc_female", "herfendahl", "perc_unemployed", "perc_foodstamp")]
# obs_cov <- obs_data[, c("total_pop", "med_hh_income")]
obs_cov$total_pop = obs_cov$total_pop / 2193
obs_cov$med_hh_income = obs_cov$med_hh_income / 110208
int_data <- read.csv("../../data/working/ward_9_blockgroups/over_simpoints_cov_10000int_points.csv")
int_pts <- int_data[, c("x", "y")]
int_cov <- int_data[, c("total_pop", "med_hh_income", "perc_female", "herfendahl", "perc_unemployed", "perc_foodstamp")]
# int_cov <- int_data[, c("total_pop", "med_hh_income")]
int_cov$total_pop = int_cov$total_pop / 2193
int_cov$med_hh_income = int_cov$med_hh_income / 110208
knots <- read.csv("../../data/working/ward_9_blockgroups/71_knots.csv")
plot(int_pts, col="blue")
points(obs_pts, col="red")
points(knots, col="black")
plot(int_pts, col="blue")
points(obs_pts, col="red")
points(knots, col="black")
# obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv")
obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(Problem == "Suspicious Perso n")
# obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(Problem != "Suspicious Person")
# obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(PrimaryOffense == "OBSTRU")
# obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(PrimaryOffense != "OBSTRU")
# obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(Is911Call == "Yes")
# obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(Is911Call == "No")
obs_pts <- obs_data[, c("X", "Y")]
set.seed(3)
jitter_lat <- runif(n = nrow(obs_pts), 0.0001, 0.0005) #only goes to fifth decimal point
jitter_lon <- runif(n = nrow(obs_pts), 0.0001, 0.0005) #only goes to fifth decimal point
obs_pts$Y <- obs_pts$Y + jitter_lat
obs_pts$X <- obs_pts$X + jitter_lon
obs_cov <- obs_data[, c("total_pop", "med_hh_income", "perc_female", "herfendahl", "perc_unemployed", "perc_foodstamp")]
# obs_cov <- obs_data[, c("total_pop", "med_hh_income")]
obs_cov$total_pop = obs_cov$total_pop / 2193
obs_cov$med_hh_income = obs_cov$med_hh_income / 110208
int_data <- read.csv("../../data/working/ward_9_blockgroups/over_simpoints_cov_10000int_points.csv")
int_pts <- int_data[, c("x", "y")]
int_cov <- int_data[, c("total_pop", "med_hh_income", "perc_female", "herfendahl", "perc_unemployed", "perc_foodstamp")]
# int_cov <- int_data[, c("total_pop", "med_hh_income")]
int_cov$total_pop = int_cov$total_pop / 2193
int_cov$med_hh_income = int_cov$med_hh_income / 110208
# obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv")
obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(Problem == "Suspicious Person ")
# obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(Problem != "Suspicious Person")
# obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(PrimaryOffense == "OBSTRU")
# obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(PrimaryOffense != "OBSTRU")
# obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(Is911Call == "Yes")
# obs_data <- read.csv("../../data/working/ward_9_blockgroups/use_of_force/obs_points_with_bg_level_cov.csv") %>% filter(Is911Call == "No")
obs_pts <- obs_data[, c("X", "Y")]
set.seed(3)
jitter_lat <- runif(n = nrow(obs_pts), 0.0001, 0.0005) #only goes to fifth decimal point
jitter_lon <- runif(n = nrow(obs_pts), 0.0001, 0.0005) #only goes to fifth decimal point
obs_pts$Y <- obs_pts$Y + jitter_lat
obs_pts$X <- obs_pts$X + jitter_lon
obs_cov <- obs_data[, c("total_pop", "med_hh_income", "perc_female", "herfendahl", "perc_unemployed", "perc_foodstamp")]
# obs_cov <- obs_data[, c("total_pop", "med_hh_income")]
obs_cov$total_pop = obs_cov$total_pop / 2193
obs_cov$med_hh_income = obs_cov$med_hh_income / 110208
int_data <- read.csv("../../data/working/ward_9_blockgroups/over_simpoints_cov_10000int_points.csv")
int_pts <- int_data[, c("x", "y")]
int_cov <- int_data[, c("total_pop", "med_hh_income", "perc_female", "herfendahl", "perc_unemployed", "perc_foodstamp")]
# int_cov <- int_data[, c("total_pop", "med_hh_income")]
int_cov$total_pop = int_cov$total_pop / 2193
int_cov$med_hh_income = int_cov$med_hh_income / 110208
knots <- read.csv("../../data/working/ward_9_blockgroups/71_knots.csv")
plot(int_pts, col="blue")
points(obs_pts, col="red")
points(knots, col="black")
n_uof = nrow(obs_pts)
n_sim = nrow(int_pts)
n_knots <- nrow(knots)
covs <- as.matrix(obs_pts)
sim_covs <- as.matrix(int_pts)  # in this case, the locations themselves are the covariates
# distance matrices
knots_dists <- rdist(knots, knots)
observed_pts_vs_knots_dists <- rdist(obs_pts, knots)
integration_pts_vs_knots_dists <- rdist(int_pts, knots)
# fix phi
dist_95 <- as.numeric(quantile(knots_dists, probs = c(0.95)))
dist_05 <- as.numeric(quantile(knots_dists, probs = c(0.05)))
#deciding range
upper_unif <- -dist_95/log(0.05)
lower_unif <- -dist_05/log(0.95)
#deciding fixed value for phi
fix_phi <- (upper_unif+lower_unif)/2
fix_phi
knots_cov = expcov(knots_dists, phi=fix_phi, sigma=1)
observed_pts_vs_knots_cov = expcov(observed_pts_vs_knots_dists, phi=fix_phi, sigma=1)
integration_pts_vs_knots_cov = expcov(integration_pts_vs_knots_dists, phi=fix_phi, sigma=1)
hist(knots_cov)
